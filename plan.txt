- 1) create DB and connect to it
- 2) create tables
Created table of Person:
create table IF NOT EXISTS Person (
    person_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    full_name varchar(100) UNIQUE  NOT NULL,
    year_of_birth int CHECK ( year_of_birth > 1900 ) NOT NULL
)

Created table of book:
create table Book (
    book_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    person_id BIGINT REFERENCES person(person_id) ON DELETE SET NULL,
    book_name varchar(100) UNIQUE NOT NULL,
    author_full_name varchar(100) NOT NULL,
    year_of_pub int CHECK ( year_of_pub > 1700 ) NOT NULL
)

- 3) connect necessary dependencies (postgreSQL, spring core, spring context, spring-web, spring-webmvc, spring-jdbc, thymeleaf-spring5, servlet, hybernate-validator)
- 4) configuration for Spring (MyWebAppInitializer, SpringConfig)
- 5) configuration for DB
- 6) create class for Person with fields: personId, fullName, yearOfBirth
- 7) create class for Book with fields: bookId, personId, name, authorFullName, yearOfPub

- 8) Pages for creating, updating and deleting person
-.creating
-.updating
-.deleting
- 9) Pages for creating, updating and deleting book
-.creating
-.updating
-.deleting

- 10) Page with list of all people (people are clickable - after click on person it must redirect to page with info about this person).
- 11) Page with list of all books (books are clickable - after click on book it must redirect to page with info about this book).
- 12) Page of person which show all values of him fields and list of books which he took. If person doesn't take any book, it must print text "He hasn't taken book yet".
- 13) Page of book which show all values of book's fields and full name of person who took this book. If book isn't taken, it must print text "This book is free".
- 14) If somebody takes book, on book's page near person's name must be "Free book" button. This button is knocked by librarian when person bring this book back, book become free and deleting from person's list of books.
- 15) On the page of the book, if the book is free, there should be a drop-down list (<select>) with all people and the "Choose person" button. This button is pressed by the librarian when the person wants to take this book home. The book must be included in the list of person's book.
16) All fields must validate with @Valid and @Spring Validator, if it's necessary
- field for person's year of birthday (not before 1900)
- field for person's full name (not empty, this structure (First name, Last name))

- field for year of book's publication (not empty, not before 1700)
- field for book's name (not empty, bigger then 1 symbol and less than 200)
- field for author's full name (not empty, this structure (First name, Last name))

- if person with this name already exists in DB
- if book with this name already exists in DB
